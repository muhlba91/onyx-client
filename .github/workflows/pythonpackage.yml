name: Python package

on:
  push:

jobs:
  test:
    runs-on: ubuntu-latest
    name: Check the Codebase
    strategy:
      max-parallel: 4
      matrix:
        python-version: [ 3.9 ]
        poetry-version: [ 1.1.4 ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up Poetry ${{ matrix.poetry-version }}
        uses: abatilo/actions-poetry@v2.1.0
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          poetry install

      - name: Lint files
        run: |
          poetry check
          poetry run flakehell lint
          poetry run black --check .

      - name: Run tests
        run: |
          poetry run pytest

      - name: Coveralls
        run: |
          poetry run coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}

  publish:
    runs-on: ubuntu-latest
    name: Build and Publish to TestPyPi and PyPi
    if: startsWith(github.ref, 'refs/tags') || github.ref == 'refs/heads/next'
    needs:
      - test
    strategy:
      max-parallel: 4
      matrix:
        python-version: [ 3.9 ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build

      - name: Build a binary wheel and a source tarball
        run: |
          python -m build

      - name: Publish distribution to TestPyPi
        if: github.ref == 'refs/heads/next'
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/

      - name: Publish release distribution to PyPi
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
